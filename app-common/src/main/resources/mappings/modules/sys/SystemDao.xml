<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eryansky.modules.sys.dao.SystemDao">

	<!--organ表同步到扩展表-->
	<insert id="insertToOrganExtend">
		INSERT INTO t_sys_organ_extend (
		id,
		status,
		version,
		create_user,
		create_time,
		update_user,
		update_time,
		name,
		short_name,
		type,
		code,
		biz_code,
		extend_attr,
		sys_code,
		address,
		mobile,
		phone,
		fax,
		manager_user_id,
		deputy_manager_user_id,
		super_manager_user_id,
		sort,
		parent_id,
		parent_ids,
		area_id,
		area_code,
		area_biz_code,
		remark,
		parent_code,
		parent_biz_code,
		company_id,
		company_code,
		company_biz_code,
		home_company_id,
		home_company_code,
		home_company_biz_code,
		tree_level
		) SELECT id,
		status,
		version,
		create_user,
		create_time,
		update_user,
		update_time,
		name,
		short_name,
		type,
		code,
		biz_code,
		extend_attr,
		sys_code,
		address,
		mobile,
		phone,
		fax,
		manager_user_id,
		deputy_manager_user_id,
		super_manager_user_id,
		sort,
		parent_id,
		parent_ids,
		area_id,
		#{areaCode},
		#{areaBizCode},
		remark,
		#{parentCode},
		#{parentBizCode},
		#{companyId},
		#{companyCode},
		#{companyBizCode},
		#{homeCompanyId},
		#{homeCompanyCode},
		#{homeCompanyBizCode},
		#{treeLevel}
		FROM t_sys_organ
		<where>
			id = #{id}
		</where>
	</insert>


	<!--	存储过程 批量处理-->
	<insert id="insertToOrganExtendByFunction">
		INSERT INTO t_sys_organ_extend (
		id,
		status,
		version,
		create_user,
		create_time,
		update_user,
		update_time,
		name,
		short_name,
		type,
		code,
		biz_code,
		extend_attr,
		sys_code,
		address,
		mobile,
		phone,
		fax,
		manager_user_id,
		deputy_manager_user_id,
		super_manager_user_id,
		sort,
		parent_id,
		parent_ids,
		area_id,
		area_code,
		area_biz_code,
		remark,
		parent_code,
		parent_biz_code,
		company_id,
		company_code,
		company_biz_code,
		home_company_id,
		home_company_code,
		home_company_biz_code,
		tree_level
		) SELECT a.id,
				 a.status,
				 a.version,
				 a.create_user,
				 a.create_time,
				 a.update_user,
				 a.update_time,
				 a.name,
				 a.short_name,
				 a.type,
				 a.code,
				 a.biz_code,
				 a.extend_attr,
				 a.sys_code,
				 a.address,
				 a.mobile,
				 a.phone,
				 a.fax,
				 a.manager_user_id,
				 a.deputy_manager_user_id,
				 a.super_manager_user_id,
				 a.sort,
				 a.parent_id,
				 a.parent_ids,
				 a.area_id,
				 ar.code,
				 ar.biz_code,
				 a.remark,
				 P.code,
				 p.biz_code,
				 getOrganCompanyId(a.id),
				 getOrganCompanyCode(a.id),
				 getOrganCompanyBizCode(a.id),
				 getOrganHomeCompanyId(a.id),
				 getOrganHomeCompanyCode(a.id),
				 getOrganHomeCompanyBizCode(a.id),
				 (length(a.parent_ids) - length(replace(a.parent_ids,',','')))
		FROM t_sys_organ a
		LEFT JOIN t_sys_organ p ON p.id = a.parent_id
		LEFT JOIN t_sys_area ar ON ar.id = a.area_id
		<where>
			<if test="id != null and id != ''">
				AND a.id = #{id}
			</if>
		</where>
	</insert>

	<!--删除organ扩展表数据-->
	<delete id="deleteOrganExtend">
		/*TDDL:FORBID_EXECUTE_DML_ALL=FALSE*/
		DELETE FROM t_sys_organ_extend
		<where>
			<if test="id != null and id != ''">
				AND id = #{id}
			</if>
		</where>
	</delete>

	<select id="findTableList" resultType="com.eryansky.modules.sys.vo.TableDTO">
		SELECT
		table_schema AS "tableSchema",
		table_name AS "tableName",
		table_comment AS "tableComment"
		FROM information_schema.tables
		<where>
			table_schema =
			<choose>
				<when test="tableSchema != null and tableSchema != ''">#{tableSchema}</when>
				<otherwise>(SELECT database())</otherwise>
			</choose>
			<if test="query != null and query != ''">
				AND table_name LIKE
				<choose>
					<when test="dbName == 'db2'">'%'||#{query}||'%'</when>
					<when test="dbName == 'mysql'">CONCAT('%', #{query}, '%')</when>
					<when test="dbName == 'oracle'">'%'||#{query}||'%'</when>
					<otherwise>'%'+#{query}+'%'</otherwise>
				</choose>
			</if>
		</where>
	</select>


	<select id="findTableColumnByTableName" resultType="com.eryansky.modules.sys.vo.TableColumnDTO">
		SELECT
		column_name AS "columnName",
		column_comment AS "columnComment",
		column_type AS "columnType",
		data_type AS "dataType",
		is_nullable AS "isNullable",
		column_key AS "columnKey"
		FROM information_schema.columns
		<where>
			table_schema =
			<choose>
				<when test="tableSchema != null and tableSchema != ''">#{tableSchema}</when>
				<otherwise>(SELECT database())</otherwise>
			</choose>
			AND table_name = #{tableName}
		</where>
		ORDER BY ordinal_position ASC
	</select>


	<select id="findTableDataByTableName" resultType="java.util.LinkedHashMap">
		SELECT
		<foreach collection="list" item="item" separator=",">
			${item.columnName}
		</foreach>
		FROM
		<choose>
			<when test="tableSchema != null and tableSchema != ''">${tableSchema}.${tableName}</when>
			<otherwise>${tableName}</otherwise>
		</choose>

	</select>

</mapper>